Given an unsorted array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....

Example 1:

Input: nums = [1, 5, 1, 1, 6, 4]
Output: One possible answer is [1, 4, 1, 5, 1, 6].
Example 2:

Input: nums = [1, 3, 2, 2, 3, 1]
Output: One possible answer is [2, 3, 1, 3, 1, 2].
Note:
You may assume all input has valid answer.

class Solution {
public:
    void wiggleSort(vector<int>& nums) {
        if(nums.empty())
            return;
        
        bool flag = false;
        int n = nums.size();
        sort(nums.begin(), nums.end());
        vector<int> temp(n);
        int l = (n-1)/2, r = n -1; 
        
        for(int i = 0; i < n; i++) {
            if(i & 1) {
                temp[i] = nums[r];
                r--;
            } else {
                temp[i] = nums[l];
                l--;
            }
        }
        for(int i = 0; i < n; i++)
            nums[i] = temp[i];
    }
};
